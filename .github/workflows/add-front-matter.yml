name: Add Front Matter

on:
  push:
    branches: [ main ]
    paths:
      - '**.md'
      - '!.github/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  add-front-matter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Process Documents
        id: process
        run: |
          set -e
          
          # 初始化计数器
          declare -i total=0 processed=0 failed=0
          
          process_file() {
            local file="$1"
            
            # 检查文件
            if [[ ! -f "$file" || ! -w "$file" ]]; then
              echo "[ERROR] 无法访问文件: $file"
              return 1
            fi
            
            # 检查front matter
            if grep -q "^---$" "$file" && grep -q "^title:" "$file"; then
              echo "[INFO] 跳过 $file: 已存在 front matter"
              return 0
            fi
            
            # 获取文件信息
            local title=$(basename "$file" .md)
            local date
            date=$(TZ='Asia/Shanghai' date -d "$(git log -1 --format=%aI -- "$file" 2>/dev/null || date -u +%Y-%m-%dT%H:%M:%SZ)" +%Y-%m-%dT%H:%M:%S+08:00) || return 1
            local category=$(dirname "$file" | sed 's|^\./||')
            
            # 创建临时文件
            local temp_file=$(mktemp)
            {
              echo "---"
              echo "title: \"$title\""
              echo "date: $date"
              echo "categories: [\"$category\"]"
              echo "type: \"post\""
              echo "---"
              cat "$file"
            } > "$temp_file" || return 1
            
            # 安全替换原文件
            if mv "$temp_file" "$file"; then
              echo "[SUCCESS] 已添加 front matter 到 $file"
              return 0
            else
              rm -f "$temp_file"
              echo "[ERROR] 更新文件失败: $file"
              return 1
            fi
          }
          
          # 处理所有markdown文件
          while IFS= read -r file; do
            ((total++))
            if process_file "$file"; then
              ((processed++))
            else
              ((failed++))
            fi
          done < <(find . -type f -name "*.md" ! -name "README.md")
          
          # 输出结果
          echo "处理结果: 总计 $total, 成功 $processed, 失败 $failed"
          echo "processed=$processed" >> "$GITHUB_OUTPUT"
          echo "failed=$failed" >> "$GITHUB_OUTPUT"
          
          # 如果有失败则返回错误码
          [[ $failed -eq 0 ]] || exit 1

      - name: Commit changes
        if: steps.process.outputs.processed > 0
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A
          git commit -m "chore: add front matter [skip ci]" || exit 0
          git push
