name: Deploy Hugo site to Pages

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # 每日UTC 2点自动构建
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy-pages.outputs.page_url }}
    
    steps:
      # 基础配置
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0  # 获取完整提交历史

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 文档预处理
      - name: Process content
        run: |
          mkdir -p themes
          git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

          # 核心处理函数：自动生成缺失的front matter
          generate_front_matter() {
            local file="$1"
            local title=$(basename "$file" .md)
            local date=$(git log --diff-filter=A --format=%aI -- "$file" | head -1)  # 获取首次提交时间
            local category=$(dirname "$file" | sed 's|^./||')

            # 跳过已有front matter的文件
            if sed -n '1{/^---$/h}; /^---$/{x;p;q}; H' "$file" | grep -q "^---$"; then
              cp "$file" "content/$category/$title.md"
              return
            fi

            # 生成标准front matter
            {
              echo "---"
              echo "title: \"$title\""
              echo "date: $date"          # 基于首次提交时间
              echo "categories: [\"$category\"]"
              echo "type: \"post\""       # 统一文章类型
              echo "---"
              cat "$file"
            } > "content/$category/$title.md"
          }

          # 遍历并处理所有md文件
          find . -type f -name "*.md" ! -name "README.md" | while read file; do
            dir=$(dirname "$file" | sed 's|^./||')
            mkdir -p "content/$dir"
            generate_front_matter "$file"
          done

      # 站点部署
      - name: Configure Hugo
        run: |
          # 域名配置逻辑
          [ -n "$CUSTOM_DOMAIN" ] && domain="$CUSTOM_DOMAIN" || \
          domain="${{ github.repository_owner }}.github.io/$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"

          # 生成基础配置
          cat > config.toml << EOL
          baseURL = "https://$domain"
          languageCode = "zh-cn"
          title = "${{ github.repository_owner }}'s Space"
          theme = "PaperMod"
          [params]
            mainSections = ["post"]
            defaultTheme = "auto"
            ShowReadingTime = true
          EOL

      - name: Build and deploy
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deploy-pages
        uses: actions/deploy-pages@v4
