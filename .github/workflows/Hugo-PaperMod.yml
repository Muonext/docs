name: Deploy Hugo site to Pages

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    env:
      CUSTOM_DOMAIN: ${{ github.event.repository.pages.cname }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0  # 必须获取完整历史

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Process Markdown Files
        run: |
          # 安装主题
          mkdir -p themes
          git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

          # 文件处理函数
          process_creation_date() {
            local file="$1"
            local title=$(basename "$file" .md)
            local category=$(dirname "$file" | sed 's|^./||')

            # 获取精确创建时间
            created_date=$(git log --diff-filter=A --follow --format=%aI -- "$file" | tail -1)
            [ -z "$created_date" ] && created_date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

            # 处理已有front matter
            if grep -q '^---$' "$file"; then
              temp_file=$(mktemp)
              cp "$file" "$temp_file"

              # 清理旧日期字段
              sed -i '/^date:/d' "$temp_file"

              # 插入新日期到front matter顶部
              sed -i "1,/^---$/ {
                /^---$/i\date: $created_date
              }" "$temp_file"

              mkdir -p "content/$category"
              mv "$temp_file" "content/$category/$title.md"
            else
              {
                echo "---"
                echo "title: \"$title\""
                echo "date: $created_date"
                echo "categories: [\"$category\"]"
                echo "type: \"post\""
                echo "---"
                cat "$file"
              } > "content/$category/$title.md"
            fi
          }

          # 批量处理文件
          find . -type f -name "*.md" ! -name "README.md" ! -path "./themes/*" | while read file; do
            dir=$(dirname "$file" | sed 's|^./||')
            mkdir -p "content/$dir"
            process_creation_date "$file"
          done

      # 后续步骤保持不变
      - name: Configure Hugo
        run: |
          if [ -n "$CUSTOM_DOMAIN" ]; then
            domain="$CUSTOM_DOMAIN"
          else
            owner="${GITHUB_REPOSITORY_OWNER}"
            repo="$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)"
            domain="$owner.github.io/$repo"
          fi

          cat > config.toml << EOL
          baseURL = "https://$domain"
          languageCode = "zh-cn"
          title = "${{ github.repository_owner }}'s Space"
          theme = "PaperMod"

          [params]
            mainSections = ["post"]
            defaultTheme = "auto"
            ShowReadingTime = true
            ShowShareButtons = false
            ShowPostNavLinks = true
            ShowBreadCrumbs = true
            ShowCodeCopyButtons = true
            ShowToc = true

            [params.homeInfoParams]
              Title = "欢迎来到 ${{ github.repository_owner }} 的文档站"
              Content = "在喧嚣时代中静心思考，用文字传递理性与希望。"

            [[params.socialIcons]]
              name = "github"
              url = "https://github.com/${{ github.repository_owner }}"

          [outputs]
            home = ["HTML", "RSS", "JSON"]

          [taxonomies]
            category = "categories"
            tag = "tags"

          [menu]
            main = [
              {identifier = "archives", name = "Archives", url = "/archives/", weight = 10},
              {identifier = "categories", name = "Categories", url = "/categories/", weight = 20},
              {identifier = "search", name = "Search", url = "/search/", weight = 30},
              {identifier = "tags", name = "Tags", url = "/tags/", weight = 40}
            ]
          EOL

          mkdir -p content
          # 创建必要页面...

      - name: Build site
        run: hugo --minify

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
