name: Deploy Hugo site to Pages

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 1. 检出仓库代码
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # 2. 安装 Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      # 3. 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 4. 准备 content（复制附件 & 处理 Markdown）
      - name: Prepare content
        run: |
          # 下载 PaperMod 主题
          mkdir -p themes
          git clone https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod

          # 创建 content 目录
          mkdir -p content

          # 函数：判断是否需要跳过某个文件/目录
          should_skip() {
            local p="$1"

            # 跳过 .git / .github / workflow / themes 等文件夹，防止把主题也复制进 content
            if [[ "$p" == ./.git* || "$p" == ./.github* || "$p" == ./themes* ]]; then
              return 0  # 0 表示 true -> 跳过
            fi

            # 如果有更多需要跳过的文件或目录，可在这里添加规则
            # 比如跳过顶层 README.md:
            if [[ "$p" == ./README.md ]]; then
              return 0
            fi

            return 1  # 1 表示 false -> 不跳过
          }

          # 函数：自动生成或保留 Front Matter
          generate_front_matter() {
            local src_md="$1"
            local rel_path="${src_md#./}"    # 去掉 ./ 前缀
            local title=$(basename "$rel_path" .md)
            local date=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

            # 目录名作为分类(可按需修改)
            local category="$(dirname "$rel_path" | cut -d/ -f1)"

            local dest_md="content/$rel_path"
            mkdir -p "$(dirname "$dest_md")"

            if grep -q "^---" "$src_md"; then
              # 如果已有 front matter，则直接复制
              cp "$src_md" "$dest_md"
            else
              # 若没有 front matter，自动插入
              {
                echo "---"
                echo "title: \"$title\""
                echo "date: $date"
                echo "categories: [\"$category\"]"
                echo "type: \"post\""
                echo "---"
                cat "$src_md"
              } > "$dest_md"
            fi
          }

          # 先复制非 .md 文件
          while IFS= read -r -d '' file; do
            if should_skip "$file"; then
              continue
            fi
            # 用普通变量（非 local）来存放目标路径
            dest="content/${file#./}"
            mkdir -p "$(dirname "$dest")"
            cp "$file" "$dest"
          done < <(find . -type f ! -name "*.md" -print0)

          # 再处理 .md 文件
          while IFS= read -r -d '' mdfile; do
            if should_skip "$mdfile"; then
              continue
            fi
            generate_front_matter "$mdfile"
          done < <(find . -type f -name "*.md" -print0)

      # 5. 写入 Hugo 配置
      - name: Configure Hugo
        run: |
          cat > config.toml << EOL
          baseURL = "https://2024365.xyz"
          languageCode = "zh-cn"
          title = "${{ github.repository_owner }}'s Space"
          theme = "PaperMod"

          [params]
            # 所有文章都设置为 type="post"
            mainSections = ["post"]

            defaultTheme = "auto"
            ShowReadingTime = true
            ShowShareButtons = false
            ShowPostNavLinks = true
            ShowBreadCrumbs = true
            ShowCodeCopyButtons = true
            ShowToc = true

            [params.homeInfoParams]
              Title = "欢迎来到 ${{ github.repository_owner }} 的文档站"
              Content = "在喧嚣时代中静心思考，用文字传递理性与希望。"

            [[params.socialIcons]]
              name = "github"
              url = "https://github.com/${{ github.repository_owner }}"

          [outputs]
            home = ["HTML", "RSS", "JSON"]

          [taxonomies]
            category = "categories"
            tag = "tags"

          [menu]
            main = [
              {identifier = "archives", name = "Archives", url = "/archives/", weight = 10},
              {identifier = "categories", name = "Categories", url = "/categories/", weight = 20},
              {identifier = "search", name = "Search", url = "/search/", weight = 30},
              {identifier = "tags", name = "Tags", url = "/tags/", weight = 40}
            ]
          EOL

          # 创建搜索页 & 归档页
          mkdir -p content
          cat > content/search.md << EOL
          ---
          title: "Search"
          layout: "search"
          summary: "search"
          placeholder: "搜索文章..."
          ---
          EOL

          cat > content/archives.md << EOL
          ---
          title: "Archives"
          layout: "archives"
          url: "/archives/"
          summary: "archives"
          ---
          EOL

      # 6. Hugo 构建
      - name: Build site
        run: hugo --minify

      # 7. 上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

      # 8. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
